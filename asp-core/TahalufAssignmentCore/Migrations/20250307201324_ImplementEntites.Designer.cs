// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TahalufAssignmentCore.Context;

#nullable disable

namespace TahalufAssignmentCore.Migrations
{
    [DbContext(typeof(TahalufAssignmentDbContext))]
    [Migration("20250307201324_ImplementEntites")]
    partial class ImplementEntites
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TahalufAssignmentCore.Entities.Authantication.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(900)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsLoggedIn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(255)")
                        .HasDefaultValue("Student");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users", null, t =>
                        {
                            t.HasCheckConstraint("CH_UserFirstName", "LEN(FirstName)>=3");

                            t.HasCheckConstraint("CH_UserLastName", "LEN(LastName)>=3");

                            t.HasCheckConstraint("CH_UserType", "UserType like 'Admin'");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2025, 3, 7, 23, 13, 24, 234, DateTimeKind.Local).AddTicks(2165),
                            Email = "joshaer17@gmail.com",
                            FirstName = "Jasser",
                            IsActive = false,
                            IsLoggedIn = false,
                            LastName = "Alshaer",
                            Password = "E140417FC6C73036D8E588CF6BDF571456DF87F7A7638DB7F2203A0CA86C5FB1891971D1FD87717D19D558DEEC66D337",
                            UserType = "Admin",
                            Username = "FC8C0C79545BB5E9AFE969574C81EEABE7702CAD289584B0B19DFEDFBEB338A626B855A7DDB54A9FF0A9B73C76CB3FDF"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2025, 3, 7, 23, 13, 24, 234, DateTimeKind.Local).AddTicks(2468),
                            Email = "admin@tahaluf.com",
                            FirstName = "Admin",
                            IsActive = false,
                            IsLoggedIn = false,
                            LastName = "Assignement",
                            Password = "E58DF53ED3BC705D5B921BA27A6101B88380F0FABAC71A1DF84834254E1F1B31D7A7700C4388E36F0F76B9148D90985B",
                            UserType = "Admin",
                            Username = "9CA694A90285C034432C9550421B7B9DBD5C0F4B6673F05F6DBCE58052BA20E4248041956EE8C9A2EC9F10290CDC0782"
                        });
                });

            modelBuilder.Entity("TahalufAssignmentCore.Entities.Companies.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrgnizationId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("OrgnizationId");

                    b.ToTable("Companies", (string)null);
                });

            modelBuilder.Entity("TahalufAssignmentCore.Entities.Management.LookupItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("LookupTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(900)");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("LookupTypeId");

                    b.HasIndex("Name");

                    b.HasIndex("NameAr");

                    b.ToTable("LookupItems", null, t =>
                        {
                            t.HasCheckConstraint("CH_NameAr_Length", "LEN(Name) >= 2");

                            t.HasCheckConstraint("CH_Name_Length", "LEN(NameAr) >= 2");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2025, 3, 7, 23, 13, 24, 234, DateTimeKind.Local).AddTicks(2097),
                            IsActive = false,
                            LookupTypeId = 1,
                            Name = "United States",
                            NameAr = "الولايات المتحدة"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2025, 3, 7, 23, 13, 24, 234, DateTimeKind.Local).AddTicks(2100),
                            IsActive = false,
                            LookupTypeId = 1,
                            Name = "Jordan",
                            NameAr = "الأردن"
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2025, 3, 7, 23, 13, 24, 234, DateTimeKind.Local).AddTicks(2101),
                            IsActive = false,
                            LookupTypeId = 1,
                            Name = "Saudi Arabia",
                            NameAr = "المملكة العربية السعودية"
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2025, 3, 7, 23, 13, 24, 234, DateTimeKind.Local).AddTicks(2102),
                            IsActive = false,
                            LookupTypeId = 1,
                            Name = "United Arab Emirates",
                            NameAr = "الإمارات العربية المتحدة"
                        },
                        new
                        {
                            Id = 5,
                            CreationDate = new DateTime(2025, 3, 7, 23, 13, 24, 234, DateTimeKind.Local).AddTicks(2103),
                            IsActive = false,
                            LookupTypeId = 1,
                            Name = "Egypt",
                            NameAr = "مصر"
                        },
                        new
                        {
                            Id = 6,
                            CreationDate = new DateTime(2025, 3, 7, 23, 13, 24, 234, DateTimeKind.Local).AddTicks(2104),
                            IsActive = false,
                            LookupTypeId = 1,
                            Name = "Morocco",
                            NameAr = "المغرب"
                        },
                        new
                        {
                            Id = 7,
                            CreationDate = new DateTime(2025, 3, 7, 23, 13, 24, 234, DateTimeKind.Local).AddTicks(2104),
                            IsActive = false,
                            LookupTypeId = 1,
                            Name = "France",
                            NameAr = "فرنسا"
                        },
                        new
                        {
                            Id = 8,
                            CreationDate = new DateTime(2025, 3, 7, 23, 13, 24, 234, DateTimeKind.Local).AddTicks(2105),
                            IsActive = false,
                            LookupTypeId = 1,
                            Name = "Germany",
                            NameAr = "ألمانيا"
                        },
                        new
                        {
                            Id = 9,
                            CreationDate = new DateTime(2025, 3, 7, 23, 13, 24, 234, DateTimeKind.Local).AddTicks(2106),
                            IsActive = false,
                            LookupTypeId = 1,
                            Name = "United Kingdom",
                            NameAr = "المملكة المتحدة"
                        },
                        new
                        {
                            Id = 10,
                            CreationDate = new DateTime(2025, 3, 7, 23, 13, 24, 234, DateTimeKind.Local).AddTicks(2107),
                            IsActive = false,
                            LookupTypeId = 1,
                            Name = "Italy",
                            NameAr = "إيطاليا"
                        },
                        new
                        {
                            Id = 11,
                            CreationDate = new DateTime(2025, 3, 7, 23, 13, 24, 234, DateTimeKind.Local).AddTicks(2108),
                            IsActive = false,
                            LookupTypeId = 1,
                            Name = "Spain",
                            NameAr = "إسبانيا"
                        },
                        new
                        {
                            Id = 12,
                            CreationDate = new DateTime(2025, 3, 7, 23, 13, 24, 234, DateTimeKind.Local).AddTicks(2108),
                            IsActive = false,
                            LookupTypeId = 1,
                            Name = "Qatar",
                            NameAr = "قطر"
                        },
                        new
                        {
                            Id = 13,
                            CreationDate = new DateTime(2025, 3, 7, 23, 13, 24, 234, DateTimeKind.Local).AddTicks(2109),
                            IsActive = false,
                            LookupTypeId = 1,
                            Name = "Lebanon",
                            NameAr = "لبنان"
                        },
                        new
                        {
                            Id = 14,
                            CreationDate = new DateTime(2025, 3, 7, 23, 13, 24, 234, DateTimeKind.Local).AddTicks(2110),
                            IsActive = false,
                            LookupTypeId = 1,
                            Name = "Syria",
                            NameAr = "سوريا"
                        },
                        new
                        {
                            Id = 15,
                            CreationDate = new DateTime(2025, 3, 7, 23, 13, 24, 234, DateTimeKind.Local).AddTicks(2111),
                            IsActive = false,
                            LookupTypeId = 1,
                            Name = "Iraq",
                            NameAr = "العراق"
                        },
                        new
                        {
                            Id = 16,
                            CreationDate = new DateTime(2025, 3, 7, 23, 13, 24, 234, DateTimeKind.Local).AddTicks(2112),
                            IsActive = false,
                            LookupTypeId = 1,
                            Name = "Kuwait",
                            NameAr = "الكويت"
                        },
                        new
                        {
                            Id = 17,
                            CreationDate = new DateTime(2025, 3, 7, 23, 13, 24, 234, DateTimeKind.Local).AddTicks(2113),
                            IsActive = false,
                            LookupTypeId = 1,
                            Name = "Oman",
                            NameAr = "عمان"
                        },
                        new
                        {
                            Id = 18,
                            CreationDate = new DateTime(2025, 3, 7, 23, 13, 24, 234, DateTimeKind.Local).AddTicks(2114),
                            IsActive = false,
                            LookupTypeId = 1,
                            Name = "Bahrain",
                            NameAr = "البحرين"
                        },
                        new
                        {
                            Id = 19,
                            CreationDate = new DateTime(2025, 3, 7, 23, 13, 24, 234, DateTimeKind.Local).AddTicks(2115),
                            IsActive = false,
                            LookupTypeId = 1,
                            Name = "Algeria",
                            NameAr = "الجزائر"
                        },
                        new
                        {
                            Id = 20,
                            CreationDate = new DateTime(2025, 3, 7, 23, 13, 24, 234, DateTimeKind.Local).AddTicks(2116),
                            IsActive = false,
                            LookupTypeId = 1,
                            Name = "Tunisia",
                            NameAr = "تونس"
                        },
                        new
                        {
                            Id = 21,
                            CreationDate = new DateTime(2025, 3, 7, 23, 13, 24, 234, DateTimeKind.Local).AddTicks(2116),
                            IsActive = false,
                            LookupTypeId = 1,
                            Name = "Libya",
                            NameAr = "ليبيا"
                        },
                        new
                        {
                            Id = 22,
                            CreationDate = new DateTime(2025, 3, 7, 23, 13, 24, 234, DateTimeKind.Local).AddTicks(2117),
                            IsActive = false,
                            LookupTypeId = 1,
                            Name = "Palestine",
                            NameAr = "فلسطين"
                        },
                        new
                        {
                            Id = 23,
                            CreationDate = new DateTime(2025, 3, 7, 23, 13, 24, 234, DateTimeKind.Local).AddTicks(2118),
                            IsActive = false,
                            LookupTypeId = 1,
                            Name = "Turkey",
                            NameAr = "تركيا"
                        },
                        new
                        {
                            Id = 24,
                            CreationDate = new DateTime(2025, 3, 7, 23, 13, 24, 234, DateTimeKind.Local).AddTicks(2119),
                            IsActive = false,
                            LookupTypeId = 1,
                            Name = "Greece",
                            NameAr = "اليونان"
                        },
                        new
                        {
                            Id = 25,
                            CreationDate = new DateTime(2025, 3, 7, 23, 13, 24, 234, DateTimeKind.Local).AddTicks(2119),
                            IsActive = false,
                            LookupTypeId = 1,
                            Name = "Portugal",
                            NameAr = "البرتغال"
                        },
                        new
                        {
                            Id = 26,
                            CreationDate = new DateTime(2025, 3, 7, 23, 13, 24, 234, DateTimeKind.Local).AddTicks(2120),
                            IsActive = false,
                            LookupTypeId = 1,
                            Name = "Netherlands",
                            NameAr = "هولندا"
                        },
                        new
                        {
                            Id = 27,
                            CreationDate = new DateTime(2025, 3, 7, 23, 13, 24, 234, DateTimeKind.Local).AddTicks(2121),
                            IsActive = false,
                            LookupTypeId = 1,
                            Name = "Belgium",
                            NameAr = "بلجيكا"
                        },
                        new
                        {
                            Id = 28,
                            CreationDate = new DateTime(2025, 3, 7, 23, 13, 24, 234, DateTimeKind.Local).AddTicks(2122),
                            IsActive = false,
                            LookupTypeId = 1,
                            Name = "Sweden",
                            NameAr = "السويد"
                        },
                        new
                        {
                            Id = 29,
                            CreationDate = new DateTime(2025, 3, 7, 23, 13, 24, 234, DateTimeKind.Local).AddTicks(2123),
                            IsActive = false,
                            LookupTypeId = 1,
                            Name = "Norway",
                            NameAr = "النرويج"
                        },
                        new
                        {
                            Id = 30,
                            CreationDate = new DateTime(2025, 3, 7, 23, 13, 24, 234, DateTimeKind.Local).AddTicks(2123),
                            IsActive = false,
                            LookupTypeId = 1,
                            Name = "Denmark",
                            NameAr = "الدنمارك"
                        },
                        new
                        {
                            Id = 31,
                            CreationDate = new DateTime(2025, 3, 7, 23, 13, 24, 234, DateTimeKind.Local).AddTicks(2124),
                            IsActive = false,
                            LookupTypeId = 1,
                            Name = "Switzerland",
                            NameAr = "سويسرا"
                        },
                        new
                        {
                            Id = 32,
                            CreationDate = new DateTime(2025, 3, 7, 23, 13, 24, 234, DateTimeKind.Local).AddTicks(2125),
                            IsActive = false,
                            LookupTypeId = 1,
                            Name = "Austria",
                            NameAr = "النمسا"
                        },
                        new
                        {
                            Id = 33,
                            CreationDate = new DateTime(2025, 3, 7, 23, 13, 24, 234, DateTimeKind.Local).AddTicks(2126),
                            IsActive = false,
                            LookupTypeId = 1,
                            Name = "Russia",
                            NameAr = "روسيا"
                        },
                        new
                        {
                            Id = 34,
                            CreationDate = new DateTime(2025, 3, 7, 23, 13, 24, 234, DateTimeKind.Local).AddTicks(2126),
                            IsActive = false,
                            LookupTypeId = 1,
                            Name = "China",
                            NameAr = "الصين"
                        },
                        new
                        {
                            Id = 35,
                            CreationDate = new DateTime(2025, 3, 7, 23, 13, 24, 234, DateTimeKind.Local).AddTicks(2127),
                            IsActive = false,
                            LookupTypeId = 1,
                            Name = "Japan",
                            NameAr = "اليابان"
                        },
                        new
                        {
                            Id = 36,
                            CreationDate = new DateTime(2025, 3, 7, 23, 13, 24, 234, DateTimeKind.Local).AddTicks(2128),
                            IsActive = false,
                            LookupTypeId = 1,
                            Name = "India",
                            NameAr = "الهند"
                        },
                        new
                        {
                            Id = 37,
                            CreationDate = new DateTime(2025, 3, 7, 23, 13, 24, 234, DateTimeKind.Local).AddTicks(2129),
                            IsActive = false,
                            LookupTypeId = 1,
                            Name = "Canada",
                            NameAr = "كندا"
                        },
                        new
                        {
                            Id = 38,
                            CreationDate = new DateTime(2025, 3, 7, 23, 13, 24, 234, DateTimeKind.Local).AddTicks(2129),
                            IsActive = false,
                            LookupTypeId = 1,
                            Name = "Australia",
                            NameAr = "أستراليا"
                        },
                        new
                        {
                            Id = 39,
                            CreationDate = new DateTime(2025, 3, 7, 23, 13, 24, 234, DateTimeKind.Local).AddTicks(2130),
                            IsActive = false,
                            LookupTypeId = 1,
                            Name = "Brazil",
                            NameAr = "البرازيل"
                        },
                        new
                        {
                            Id = 40,
                            CreationDate = new DateTime(2025, 3, 7, 23, 13, 24, 234, DateTimeKind.Local).AddTicks(2131),
                            IsActive = false,
                            LookupTypeId = 1,
                            Name = "South Africa",
                            NameAr = "جنوب أفريقيا"
                        },
                        new
                        {
                            Id = 41,
                            CreationDate = new DateTime(2025, 3, 7, 23, 13, 24, 234, DateTimeKind.Local).AddTicks(2132),
                            IsActive = false,
                            LookupTypeId = 1,
                            Name = "Other",
                            NameAr = "غير ذلك"
                        });
                });

            modelBuilder.Entity("TahalufAssignmentCore.Entities.Management.LookupType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("NameAr")
                        .IsUnique();

                    b.ToTable("LookupTypes", null, t =>
                        {
                            t.HasCheckConstraint("CH_NameAr_Length", "LEN(Name) >= 2")
                                .HasName("CH_NameAr_Length1");

                            t.HasCheckConstraint("CH_Name_Length", "LEN(NameAr) >= 2")
                                .HasName("CH_Name_Length1");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2025, 3, 7, 23, 13, 24, 234, DateTimeKind.Local).AddTicks(1988),
                            IsActive = false,
                            Name = "Country",
                            NameAr = "الدولة"
                        });
                });

            modelBuilder.Entity("TahalufAssignmentCore.Entities.Orgnizations.Orgnization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Orgnizations", (string)null);
                });

            modelBuilder.Entity("TahalufAssignmentCore.Entities.Companies.Company", b =>
                {
                    b.HasOne("TahalufAssignmentCore.Entities.Management.LookupItem", null)
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TahalufAssignmentCore.Entities.Orgnizations.Orgnization", null)
                        .WithMany()
                        .HasForeignKey("OrgnizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TahalufAssignmentCore.Entities.Management.LookupItem", b =>
                {
                    b.HasOne("TahalufAssignmentCore.Entities.Management.LookupType", null)
                        .WithMany()
                        .HasForeignKey("LookupTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TahalufAssignmentCore.Entities.Orgnizations.Orgnization", b =>
                {
                    b.HasOne("TahalufAssignmentCore.Entities.Management.LookupItem", null)
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
